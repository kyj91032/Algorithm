# 15990 1, 2, 3 더하기 - 2차원 dp 테이블. 점화식이 더 많은 정보를 요구.

# 1,2,3으로 끝난 갯수를 세고 그 뒤에 해당하는 숫자 붙여나가며 정복.

import sys
input = sys.stdin.readline

tc = int(input())

# 추상적인 점화식 : 4를 1,2,3의 합으로 나타내는 방법의 수 d[4] = 1에서 1과 2로 끝난거에 3붙이기 + 2에서 1과 3으로 끝난거에 2붙이기 + 3에서 1과 2로 끝난거에 1붙이기
	     
dp=[[0 for _ in range(3)] for i in range(100001)] # 추상적인 점화식에 따라 dp 테이블이 2차원으로 형성되었다. 단순히 dp 값이 방법의 수인게 아니라, 더 많은 정보 즉, 그 방법의 수 중에서 1로 끝나는 것, 2로 끝나는 것, 3으로 끝나는 것의 개수를 나눠서 저장한 것이다.

dp[1]=[1,0,0] # 1은 1로 끝나는 거 하나
dp[2]=[0,1,0] # 2는 2로 끝나는 거 하나
dp[3]=[1,1,1] # 3은 1로 끝나는 거 하나(2 + 1), 2로 끝나는 거 하나(1 + 2), 3으로 끝나는 거 하나(3)

for i in range(4,100001): # 4부터 dp테이블 생성
    # 6일때 만약

    # 5에서 2와 3으로 끝난거에 1 붙이기
    dp[i][0] = dp[i-1][1] % 1000000009 + dp[i-1][2] % 1000000009
    # 4에서 1과 3으로 끝난거에 2붙이기
    dp[i][1]=dp[i-2][0] % 1000000009 + dp[i-2][2] % 1000000009
    # 3에서 1과 2로 끝난거에 3붙이기
    dp[i][2] = dp[i-3][0] % 1000000009 + dp[i-3][1] % 1000000009

for i in range(tc):
    n = int(input())
    print(sum(dp[n]) % 1000000009)

