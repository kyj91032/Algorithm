# https://boj-helper.vercel.app/solve/2504?language=python

# 생각 과정
'''
스택의 괄호에 따라서 계산을 어떻게 해야할지 몰랐다.
-> 스택을 선언하고, 누적 변수를 선언해서 둘이 같이 사용하면 된다

더하는 시점이 언젠지를 몰랐다. 최초로 닫는 괄호가 나오는 시점에 누적 변수를 더해주면 됐다.
'''

# 풀이 코드
s = list(input())

stack = []
answer = 0 # 마지막에 출력할 정답 값
tmp = 1 # 누적 계산을 할 변수. 곱이 있으므로 1로 시작

for i in range(len(s)):
    if s[i] == '(':
        stack.append(s[i])
        tmp *= 2
    elif s[i] == '[':
        stack.append(s[i])
        tmp *= 3
    elif s[i] == ')':
        if not stack or stack[-1] == '[': # 스택이 비어있거나, 마지막이 [인 경우.
            # 여기서 )인 경우는 고려하지 않아도됨. 스택에는 여는 괄호만 들어가기 때문.
            # 여는 괄호는 스택에 넣고, 닫는 괄호가 나오면 스택에서 여는 괄호를 빼주는 방식으로 진행ㄴ
            answer = 0 # 올바르지 않은 괄호열이므로 0을 출력
            break
        # 올바른 괄호열인 경우
        if s[i-1] == '(': # 최초에 닫는 괄호가 나오는 시점에 누적 변수(그동안 열린 괄호로 쌓인 값들)을 더해준다. 그 후에 닫는 괄호는 누적변수만 되돌려주면 됨
            answer += tmp
        stack.pop()
        tmp //= 2 # 누적 변수에서 *2를 되돌린다
    elif s[i] == ']':
        if not stack or stack[-1] == '(':
            answer = 0 # 올바르지 않은 괄호열이므로 0을 출력
            break
        if s[i-1] == '[':
            answer += tmp
        stack.pop()
        tmp //= 3

if stack:
    print(0)
else:
    print(answer)




# 피드백 후 정리

'''
1. 어떤 값에 대한 계산 결과를 구할 때는 "누적변수"를 사용할 생각을 한다.
2. 결국 구현은 일단 해보고, 테스트 케이스를 통과하면서 조금씩 수정해나가는 방식으로 진행한다. 수정 과정에서 더하는 시점을 찾아내는 것이 중요하다.
    처음부터 더하는 시점을 완벽히 찾아내기는 어렵다.
3. 스택에 어떤 값을 넣고 뺄지를 정해야 한다. 여기서는 스택에 괄호를 넣고 계산은 누적변수로 진행했다.
'''