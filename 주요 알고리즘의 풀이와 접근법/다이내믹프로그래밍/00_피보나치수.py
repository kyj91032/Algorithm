# https://boj-helper.vercel.app/solve/10870?language=python

# 생각 과정
'''
애초에 문제 자체에 점화식이 주어진다 -> dp로 판단
점화식 : d[i] = d[i-1] + d[i-2]. i에 따른 피보나치 수가 d[i] 이다.
'''

# 풀이 코드
n = int(input())

d = [0] * 22 # dp 테이블

d[1] = 0
d[2] = 1

for i in range(3, 22):
    d[i] = d[i-1] + d[i-2]

print(d[n+1])


# 피드백 후 정리
'''
다이내믹 프로그래밍의 구현 방법

1. 완전 탐색을 시도했을 때, 부분문제의 결과값을 재사용함으로써 큰 문제를 해결할 수 있다면.(= 점화식이 세워진다면) -> dp임.
2. d와 i를 정의한다. d와 i는 함수관계임 i에 따른 어떤 d의 값을 구하는 것.
3. 초기값을 정한다.
3. 어떤 걸 가지고 다음 i에 대한 d를 만들어낼 수 있는지를 구현한다
'''